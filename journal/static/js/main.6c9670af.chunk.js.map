{"version":3,"sources":["db.js","tupelo.js","TupeloLoader.js","AppBar.js","Header.js","NewPost.js","Day.js","Entries.js","Settings.js","App.js","serviceWorker.js","index.js","../node_modules/tupelo-wasm-sdk/lib/js/go sync"],"names":["storage","localStorage","this","key","fallback","value","getItem","JSON","parse","valueOrFunction","Function","get","setItem","stringify","undefined","getKey","a","db","has","EcdsaKey","generate","set","Array","from","privateKey","Uint8Array","fromBytes","window","Community","ChainTree","setDataTransaction","Store","did","getDefault","community","getTip","path","playTransactions","tree","resolve","remaining","store","init","newEmptyTree","blockservice","emptyTree","id","tip","toString","TupeloLoader","props","useParams","useState","tupelo","setTupelo","useEffect","Tupelo","fromDID","then","fromKey","elements","React","Children","toArray","children","map","child","cloneElement","AppBar","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","Text","to","Button","label","Header","name","setName","Heading","level","NewPost","onSubmit","post","setPost","e","preventDefault","intervalId","setInterval","clearInterval","bottom","margin","Form","TextArea","fill","placeholder","onChange","target","icon","FormAdd","type","Day","date","edit","setEdit","posts","setPosts","Date","toISOString","split","today","time","join","now","slice","getPosts","sortedPosts","keys","Object","sort","reverse","forEach","k","Layer","onEsc","onClickOutside","onSubmitEdit","entries","border","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","marked","Menu","size","items","onClick","onEdit","onDelete","Entries","setEntries","includes","getEntries","entry","Settings","setDid","FormField","TextInput","theme","global","font","family","height","App","Grommet","full","width","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","Error","code","module","exports"],"mappings":"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","file":"static/js/main.6c9670af.chunk.js","sourcesContent":["class DB {\n  constructor(storage = localStorage) {\n    this.storage = storage;\n  }\n\n  get(key, fallback) {\n    const value = this.storage.getItem(key);\n    return value === null ? fallback : JSON.parse(value);\n  }\n\n  set(key, valueOrFunction, fallback) {\n    let value;\n    if (valueOrFunction instanceof Function) {\n      const prev = this.get(key, fallback);\n      value = valueOrFunction(prev);\n    } else {\n      value = valueOrFunction;\n    }\n    this.storage.setItem(key, JSON.stringify(value));\n    return value;\n  }\n\n  has(key) {\n    return this.storage[key] !== undefined;\n  }\n}\n\nexport default new DB();\n","import db from \"./db\";\nimport {\n  Community,\n  ChainTree,\n  EcdsaKey,\n  setDataTransaction\n} from \"tupelo-wasm-sdk\";\n\nwindow.Community = Community;\nwindow.ChainTree = ChainTree;\nwindow.EcdsaKey = EcdsaKey;\nwindow.setDataTransaction = setDataTransaction;\n\nasync function getKey() {\n  if (!db.has(\"tupelo:privateKey\")) {\n    const key = await EcdsaKey.generate();\n    db.set(\"tupelo:privateKey\", Array.from(key.privateKey));\n  }\n  const privateKey = new Uint8Array(db.get(\"tupelo:privateKey\"));\n  return EcdsaKey.fromBytes(privateKey);\n}\n\nexport default class Store {\n  constructor(key, did) {\n    this.key = key;\n    this.did = did;\n  }\n\n  async init() {\n    this.community = await Community.getDefault();\n  }\n\n  static async fromKey(key) {\n    if (key === undefined) {\n      key = await getKey();\n    }\n    const store = new Store(key);\n    await store.init();\n    const emptyTree = await ChainTree.newEmptyTree(\n      store.community.blockservice,\n      key\n    );\n    const did = await emptyTree.id();\n    try {\n      const tip = await store.community.getTip(did);\n      store.tree = new ChainTree({\n        store: store.community.blockservice,\n        tip,\n        key\n      });\n    } catch (e) {\n      if (e.toString() !== \"not found\") {\n        throw e;\n      }\n      store.tree = emptyTree;\n    }\n    store.did = await store.tree.id();\n    return store;\n  }\n\n  static async fromDID(did) {\n    const store = new Store(null, did);\n    await store.init();\n    store.tree = new ChainTree({\n      store: store.community.blockservice,\n      tip: await store.getTip()\n    });\n    return store;\n  }\n\n  async getTip() {\n    return await this.community.getTip(this.did);\n  }\n\n  async set(path, value) {\n    return await this.community.playTransactions(this.tree, [\n      setDataTransaction(path, value)\n    ]);\n  }\n\n  async get(path, fallback) {\n    const { remaining, value } = await this.tree.resolve(\"/tree/data/\" + path);\n    return value === null ? fallback : value;\n  }\n\n  async delete(path) {\n    return await this.community.playTransactions(this.tree, [\n      setDataTransaction(path, undefined)\n    ]);\n  }\n}\n\nwindow.Store = Store;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Tupelo from \"./tupelo.js\";\n\nfunction TupeloLoader(props) {\n  const { did } = useParams();\n  const [tupelo, setTupelo] = useState();\n\n  useEffect(() => {\n    if (did) {\n      Tupelo.fromDID(did).then(setTupelo);\n    } else {\n      Tupelo.fromKey().then(setTupelo);\n    }\n  }, [did]);\n\n  let elements = React.Children.toArray(props.children).map(child =>\n    React.cloneElement(child, { tupelo })\n  );\n\n  if (tupelo === undefined) {\n    return <p>Loading ChainTree, please wait...</p>;\n  }\n  return elements;\n}\n\nexport default TupeloLoader;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Button, Text } from \"grommet\";\nimport { Link } from \"react-router-dom\";\n\nconst AppBar = props => (\n  <Box\n    tag=\"header\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    background=\"brand\"\n    pad={{ left: \"medium\", right: \"small\", vertical: \"small\" }}\n    elevation=\"medium\"\n    style={{ zIndex: \"1\" }}\n    {...props}\n  >\n    <Text>Tupelo's Journal</Text>\n    <Link to=\"/\">\n      <Button label=\"Home\" />\n    </Link>\n    <Link to=\"/settings\">\n      <Button label=\"Settings\" />\n    </Link>\n  </Box>\n);\n\nexport default AppBar;\n","import React, { useState, useEffect } from \"react\";\nimport { Heading } from \"grommet\";\nimport Editable from \"./Editable\";\n\nfunction Header({ tupelo }) {\n  const [name, setName] = useState(\"Unknown\");\n\n  useEffect(() => {\n    tupelo.get(\"name\").then(setName);\n  }, [tupelo]);\n\n  return <Heading level={1}>{name}'s Journal</Heading>;\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Button, Form, Icons, FormField, TextArea } from \"grommet\";\nimport { FormAdd } from \"grommet-icons\";\nimport db from \"./db\";\n\nfunction NewPost({ onSubmit, value }) {\n  const [post, setPost] = useState(value || db.get(\"post\", \"\"));\n\n  async function _onSubmit(e) {\n    e.preventDefault();\n    if (await onSubmit(post)) {\n      return;\n    }\n    setPost(\"\");\n    db.set(\"post\", \"\");\n  }\n\n  // It's pretty annoying if you wrote some text and accidentally close\n  // the page.\n  useEffect(() => {\n    const intervalId = window.setInterval(() => {\n      db.set(\"post\", post);\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [post]);\n\n  return (\n    <Box pad={{ bottom: \"medium\" }} margin={{ bottom: \"medium\" }}>\n      <Form onSubmit={_onSubmit}>\n        <TextArea\n          fill\n          placeholder=\"Describe your activity. You can use **Markdown**!\"\n          value={post}\n          onChange={e => setPost(e.target.value)}\n        />\n        <Button icon={<FormAdd />} type=\"submit\" label=\"Submit\" />\n      </Form>\n    </Box>\n  );\n}\n\nexport default NewPost;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Heading, Layer, Markdown, Menu } from \"grommet\";\nimport NewPost from \"./NewPost\";\nimport marked from \"marked\";\nimport DOMPurify from \"dompurify\";\n\nfunction Day({ tupelo, date, path }) {\n  const [edit, setEdit] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [today] = new Date().toISOString().split(\"T\");\n\n  async function onSubmit(post, date, time) {\n    const resp = await tupelo.set([\"entries\", date, time].join(\"/\"), post);\n    posts[time] = post;\n    setPosts({ ...posts });\n  }\n\n  async function onSubmitNew(post) {\n    const now = new Date().toISOString();\n    let [date, time] = now.split(\"T\");\n    // Remove the Z timezone\n    time = time.slice(0, -1);\n    return onSubmit(post, date, time);\n  }\n\n  async function onSubmitEdit(post, time) {\n    await onSubmit(post, date, time);\n    setEdit(\"\");\n    return true;\n  }\n\n  async function onEdit(time) {\n    setEdit(time);\n  }\n\n  async function onDelete(time) {\n    const resp = await tupelo.set([\"entries\", date, time].join(\"/\"), \"\");\n    delete posts[time];\n    setPosts({ ...posts });\n  }\n\n  useEffect(() => {\n    async function getPosts() {\n      const posts = await tupelo.get(path, {});\n      setPosts(posts);\n    }\n    getPosts();\n  }, [tupelo, path]);\n\n  const sortedPosts = {};\n  const keys = Object.keys(posts);\n  keys.sort();\n  keys.reverse();\n  //                NOTHING TO SEE HERE PLEASE DISPERSE\n  keys.forEach(k => posts[k] !== \"\" && (sortedPosts[k] = posts[k]));\n\n  return (\n    <Box>\n      <Heading level={2}>{date}</Heading>\n      {today === date && <NewPost onSubmit={onSubmitNew} />}\n      {edit && (\n        <Layer\n          onEsc={() => setEdit(false)}\n          onClickOutside={() => setEdit(false)}\n        >\n          <Box pad=\"large\">\n            <NewPost\n              value={posts[edit]}\n              onSubmit={post => onSubmitEdit(post, edit)}\n            />\n          </Box>\n        </Layer>\n      )}\n      {Object.entries(sortedPosts).map(([time, post]) => (\n        <Box\n          fill\n          border=\"left\"\n          pad={{ left: \"small\" }}\n          margin=\"small\"\n          key={time}\n        >\n          <div\n            dangerouslySetInnerHTML={{\n              __html: DOMPurify.sanitize(marked(post))\n            }}\n          />\n          <Box>\n            <Menu\n              size=\"small\"\n              label=\"actions\"\n              items={[\n                { label: \"Edit\", onClick: () => onEdit(time) },\n                { label: \"Delete\", onClick: () => onDelete(time) }\n              ]}\n            />\n          </Box>\n        </Box>\n      ))}\n    </Box>\n  );\n}\n\nexport default Day;\n","import React, { useState, useEffect } from \"react\";\nimport { Box } from \"grommet\";\nimport Day from \"./Day\";\n\nfunction Entries({ tupelo }) {\n  const [entries, setEntries] = useState([]);\n\n  useEffect(() => {\n    async function getEntries() {\n      const [today] = new Date().toISOString().split(\"T\");\n      let entries = Object.keys(await tupelo.get(\"entries\", {}));\n      entries.sort();\n      entries.reverse();\n      if (!entries.includes(today)) {\n        entries = [today, ...entries];\n      }\n      setEntries(entries);\n    }\n    getEntries();\n  }, [tupelo]);\n\n  return (\n    <Box>\n      {entries.map(entry => (\n        <Day\n          key={entry}\n          tupelo={tupelo}\n          date={entry}\n          path={[\"entries\", entry].join(\"/\")}\n        />\n      ))}\n    </Box>\n  );\n}\n\nexport default Entries;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Button, Form, Icons, FormField, TextInput } from \"grommet\";\n\nfunction Settings({ tupelo }) {\n  const [did, setDid] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  async function onSubmit() {\n    await tupelo.set(\"name\", name);\n  }\n\n  useEffect(() => {\n    tupelo.get(\"name\").then(setName);\n    tupelo.tree.id().then(setDid);\n  }, [tupelo]);\n\n  return (\n    <Box>\n      <Box>\n        <Form onSubmit={onSubmit}>\n          <FormField label=\"Display Name\">\n            <TextInput value={name} onChange={e => setName(e.target.value)} />\n          </FormField>\n          <Button type=\"submit\" label=\"Submit\" />\n        </Form>\n      </Box>\n\n      <Box>Your DID is: {did}</Box>\n    </Box>\n  );\n}\n\nexport default Settings;\n","import React, { useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Box, Grommet } from \"grommet\";\nimport Tupelo from \"./tupelo.js\";\nimport TupeloLoader from \"./TupeloLoader.js\";\nimport AppBar from \"./AppBar.js\";\nimport Header from \"./Header.js\";\nimport Entries from \"./Entries.js\";\nimport Settings from \"./Settings.js\";\nimport \"./global.css\";\n\nconst theme = {\n  global: {\n    font: {\n      family: \"monospace\",\n      size: \"18px\",\n      height: \"20px\"\n    }\n  }\n};\n\nfunction App() {\n  const [tupelo, setTupelo] = useState();\n\n  window.tupelo = tupelo;\n\n  useEffect(() => {\n    Tupelo.fromKey().then(setTupelo);\n  }, []);\n\n  if (tupelo === undefined) {\n    return <p>Loading Tupelo WASM SDK, please wait...</p>;\n  } else {\n    return (\n      <Grommet theme={theme} full>\n        <Router>\n          <Box align=\"center\">\n            <Box fill>\n              <AppBar />\n            </Box>\n            <Box width=\"large\">\n              <Switch>\n                <Route exact path=\"/\">\n                  <Header tupelo={tupelo} />\n                  <Entries tupelo={tupelo} />\n                </Route>\n                <Route exact path=\"/journal/:did\">\n                  <TupeloLoader>\n                    <Header />\n                    <Entries />\n                  </TupeloLoader>\n                </Route>\n                <Route path=\"/settings\">\n                  <Settings tupelo={tupelo} />\n                </Route>\n              </Switch>\n            </Box>\n          </Box>\n        </Router>\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 492;"],"sourceRoot":""}